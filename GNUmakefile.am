# Copyright (C) 2005-2017 The RTAI project
# Copyright (C) 2019 Alec Ari <neotheuser@ymail.com>
# This [file] is free software; the RTAI project
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

SUBDIRS = base testsuite

EXTRA_DIST = \
README.INSTALL \
README.ISOLCPUS \
README.LINUX_SERVER \
README.LXRT_EXTS_IN_USE \
README.SMI

DISTCLEANFILES = .rtai_config .rtai_config.old .cfok .cfchanged Module.symvers configure

moduledir = @RTAI_MODULE_DIR@

all-recursive install-recursive: base/GNUmakefile clean-if-reconfigured

clean-if-reconfigured:
	@if test -r .cfchanged ; then \
	   rm -f .cfchanged ; \
	   echo "****************************************" ; \
	   echo "*  Your RTAI configuration has changed *" ; \
	   echo "*  forcing 'make clean' ...            *" ; \
	   echo "****************************************" ; \
	   $(MAKE) clean ; \
	fi

menuconfig:
	$(MAKE) srctree=$(PWD) \
	-C base/scripts/kconfig -f Makefile.kconfig $@
	$(MAKE) --no-print-directory config-status

config-status: .rtai_config
	@test -r config.status && recf=yes || recf=no ; \
	eval `grep ^CONFIG_RTAI_INSTALLDIR $<`; \
	eval `grep ^CONFIG_RTAI_LINUXDIR $<`; \
	CC="gcc" \
	LD="ld" \
	AR="ar" \
	RANLIB="ranlib" \
	STRIP="strip" \
	NM="nm" \
	$(srctree)./configure \
	--build=$(build_alias) \
	--host=$(host_alias) \
	--with-linux-dir=$$CONFIG_RTAI_LINUXDIR \
	--prefix=$$CONFIG_RTAI_INSTALLDIR \
	$$confopts ; \
	if test $$? = 0; then \
	   touch .cfok ; \
	   if test x$$recf = xyes ; then \
	      touch .cfchanged ; \
	   fi ; \
	else \
	   rm -f .cfok ; false; \
	fi

clean-local:
	rm -rf modules .cfchanged

distclean-local:
	$(MAKE) srctree=$(srcdir) -C $(srcdir)/base/scripts/kconfig \
	--no-print-directory -f Makefile.kconfig distclean
	find . -name GNUmakefile.in | xargs rm -rf
	rm -rf rtai_config* .rtai_config* autom4te.cache aclocal.m4 m4/l*

install-data-local: .rtai_config
	$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)
	$(INSTALL_DATA) .rtai_config $(DESTDIR)$(pkgdatadir)/config-rtai-$(VERSION)
	if test -f Module.symvers ; then \
	    $(INSTALL_DATA) Module.symvers $(DESTDIR)$(moduledir)/Module.symvers ; \
	fi

install-exec-local: devices

dist-hook:
	$(MAKE) -C --no-print-directory $(distdir)/base/scripts/kconfig \
	-f Makefile.kconfig distclean srctree=$(srcdir)

dev devices:
	@if test -r $(DESTDIR)/etc/udev/udev.rules ; then \
	    for f in \
		    $(srcdir)/base/ipc/shm/rtai_shm.udev \
		    $(srcdir)/base/ipc/fifos/rtai_fifos.udev \
		    ; do \
		b=`basename $$f` ; \
		grep -q RTAI:`basename $$b .udev` $(DESTDIR)/etc/udev/udev.rules || \
		$$sudo sh -c "( echo ; cat $$f ) >> $(DESTDIR)/etc/udev/udev.rules" ; \
	    done ; \
	elif test -d $(DESTDIR)/etc/udev/rules.d ; then \
	    for f in \
		    $(srcdir)/base/ipc/shm/rtai_shm.udev \
		    $(srcdir)/base/ipc/fifos/rtai_fifos.udev \
		    ; do \
		b=`basename $$f` ; \
		grep -q RTAI:`basename $$b .udev` $(DESTDIR)/etc/udev/rules.d/99-rtai.rules || \
		$$sudo sh -c "( echo ; cat $$f ) >> $(DESTDIR)/etc/udev/rules.d/99-rtai.rules" ; \
	    done ; \
	fi ; \
	if test x$(DESTDIR) = x; then \
	    if test \! "x`type -t sudo`" = x; then sudo=sudo; else sudo=; fi; \
	    if test \! -c $(DESTDIR)/dev/rtai_shm; then \
	       $$sudo mknod -m 666 $(DESTDIR)/dev/rtai_shm c 10 254; \
	    fi; \
	    for n in `seq 0 9`; do \
	       f="$(DESTDIR)/dev/rtf$$n"; \
	       if test \! -c $$f; then \
		  $$sudo mknod -m 666 $$f c 150 $$n; \
	       fi; \
	    done ; \
	fi

.PHONY: menuconfig clean-if-reconfigured dev devices
