# Copyright (C) 2005-2017 The RTAI project
# This [file] is free software; the RTAI project
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

2009-01-21  Torsten Koschorrek <devel@koschorrek.com>

        * EXPORT_SYMBOL(save_crunch);" in file "kernel/ksyms.c"
	  The rtai_up.o module needs symbol "save_crunch" which is not exported
	  by kernel,so rtai_up.o is unable to insert to kernel.
          (suggested in rtai-ml mail dated 19.12.2008)

2004-02-16  Michael Neuhauser  <mike@firmix.at>

	* New version:
		Adeos version:	r17c2/arm-ep9301
		Adeos major:	17
		Adeos minor:	2

2004-02-16  Michael Neuhauser  <mike@firmix.at>

	* arch/arm/kernel/adeos.c (__adeos_sync_stage): fix for general Adeos
	bug, re-enable hw interrupts also when handling virtual Linux irqs
	* arch/arm/kernel/adeos.c (__adeos_walk_pipeline): force inlining (is
	only called once)

2004-01-31  Michael Neuhauser  <mike@firmix.at>

	* arch/arm/kernel/traps.c (verify_stack): only define if
	CONFIG_FRAME_POINTER is defined (to fix warning)

2004-01-31  Michael Neuhauser  <mike@firmix.at>

	* New version:
		Adeos version:	r17c1/arm-ep9301
		Adeos major:	17
		Adeos minor:	1
	* include/asm-arm/system.h: remove adeos_hw_cli() from
	prepare_to_switch and remove adeos_hw_sti() from switch_to()
	-- this allows us to use switch_to() in RTAI
	* kernel/sched.c (schedule): added adeos_hw_cli() after
	prepare_to_switch() and adeos_hw_sti() after switch_to()
	* arch/arm/kernel/adeos.c: sync to official Adeos; added
	__save_root_stall_flag_to_ibit(), __adeos_ret_to_user_restore_root()
	and __adeos_handle_syscall() for saving the root domain's stall flag
	upon entering the kernel from user space by an exception and to
	restore it during return to user space (hard i-bit in saves cpsr is
	used for it); also call __save_root_stall_flag_to_ibit() from
	__adeos_enter_syscall() -- domain might have changed due to syscall
	* kernel/adeos.c: sync to official Adeos
	(__adeos_handle_event): enable hw-irqs before calling event
	handlers -- both in threaded and in unthreaded mode
	(__adeos_stall_root, __adeos_test_root,
	__adeos_test_and_stall_root): smp/non-smp locking issues clean-up
	* arch/arm/mm/proc-arm920.S (cpu_arm920_set_pgd): if
	CONFIG_CPU_DCACHE_WRITETHROUGH: don't invalidate I cache again -- I
	& D caches have already been invalidated
	(__arm920_setup): added code to enable round-robin cache
	replacement -- doesn't improve anything so it was deactivated but
	left there for documentation
	* arch/arm/kernel/entry-armv.S: added more comments regarding Adeos
	(__dabt_svc, __und_svc, __pabt_svc): enable irqs earlier (and keep
	them enabled)
	(__dabt_usr, __und_usr, __pabt_usr): enable irqs earlier (and keep
	them enabled) and save root's stall flag
	(__irq_usr): enable hw-irqs and save root's stall flag when doing a
	"normal" return to user (Adeos irq handler must not change root's
	stall flag!)
	(call_fpe): removed superflous enable_irq (irqs are already enabled)
	(fpundefinstr): save lr before calling __adeos_handle_event,
	restore afterwards
	(ret_from_exception): enable irqs instead of disable (return to
	user code was changed!)
	* arch/arm/kernel/entry-common.S: added overview how user mode
	exceptions are handled under Adeos/ARM; hw-irqs are disabled much
	later (just before restoring registers)
	(ret_fast_syscall): don't disable hw-irqs; restore root's stall
	flag
	(reschedule): removed enable_irq before schedule -- hw-irqs are
	already enabled
	(ret_disable_irq): don't disable hw-irqs
	(restore): restore root's stall flag
	(__do_signal): don't disable hw-irqs
	(ret_from_fork, __sys_trace_return): enable hw-irqs (just to be on
	the safe side)
	(vector_swi): save root's stall flag before calling Linux syscall
	function (but only if __adeos_enter_syscall says to propagte the
	event)
	(handle_adeos_syscall): enable instead of disable hw-irqs when
	doing a slow return
	* drivers/serial/ep93xx_amba.c: use CONFIG_ADEOS_CORE for fixes
	* include/asm-arm/adeos.h: bump up version to 17.1, set arch string
	to "r17c1/arm-ep9301"

2004-01-23  Michael Neuhauser  <mike@firmix.at>

	* First check-in
		Adeos version:	r16/arm/ep9301
		Adeos major:	16
		Adeos minor:	255
