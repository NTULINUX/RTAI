=== Installing RTAI ===

Commands marked with # specify root, commands marked with $ are user commands.

1.) Download the RTAI source

$ git clone https://github.com/NTULINUX/RTAI.git

2.) Patch kernel with IPIPE, in this case we use 4.19.114

# rm -rf /usr/src/000*.patch /usr/src/linux
# cd /usr/src
# wget https://www.kernel.org/pub/linux/kernel/v4.x/linux-4.19.114.tar.xz
# tar xf linux-4.19.114.tar.xz
# ln -sfv linux-4.19.114 linux
# cp -aLv /path/to/this/RTAI-git-tree/ksrc/patches/v4.19.114/*.patch /usr/src/
# cd linux
# patch -p1 < ../0001*.patch
# patch -p1 < ../0002*.patch
# patch -p1 < ../0003*.patch
# patch -p1 < ../0004*.patch
# make olddefconfig
# make menuconfig

Configure to your needs

# make bzImage && make modules
# make install && make modules_install

3.) Update grub

Refer to your distribution documentation to do this. Generally for newer distros:

# grub-mkconfig -o /boot/grub/grub.cfg

4.) Configure, build and install RTAI (MUST BE BOOTED INTO YOUR NEW RTAI KERNEL)

$ cd ~/RTAI
$ ./autogen.sh
$ make menuconfig

Configure to your needs. You may also use ./configure instead.

For a full list of possible options:

$ ./configure --help

To build and install RTAI:

$ make

# make install

=== To create an RTAI .deb package ===

Remove any previously installed RTAI packages:

# apt-get purge linux-*-rtai* rtai-modules*

Notice: You must run the command above from inside a directory that
does not contain any .deb packages, otherwise you may see errors such as:

E: Unable to locate package linux-4.19.114-rtai_4.19.114-rtai-1_amd64.changes

$ cd ~/RTAI

$ ./autogen.sh

$ ./debian/configure 4.19.114 rtai

FIXME: In some cases (undetermined as of yet) you may need to use this
command instead:

$ ./debian/configure 4.19.114 rtai amd64

Now you are ready to build the actual package:

$ dpkg-buildpackage -uc -us

5.) LinuxCNC

=== WARNING: Only LinuxCNC git branches 2.8 and master are supported ===

Configure LinuxCNC:

$ cd linuxcnc/src
$ ./autogen.sh
$ ./configure

For a full list of possible options:

$ ./configure --help

Now build LinuxCNC:

$ make

Allow LinuxCNC to change permissions as needed:

# make setuid

To test LinuxCNC in a run-in-place environment:

$ cd ../ && . ./scripts/rip-environment

To run LinuxCNC latency test in said environment:

$ latency-test

Or to run LinuxCNC itself:

$ linuxcnc

For more information on building and installing LinuxCNC, please visit:

http://linuxcnc.org/docs/master/html/code/building-linuxcnc.html
